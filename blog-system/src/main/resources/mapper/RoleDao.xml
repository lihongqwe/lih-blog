<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lih.blogsystem.dao.RoleDao">

    <resultMap type="com.lih.blogsystem.entity.Role" id="RoleMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="roleChar" column="role_char" jdbcType="VARCHAR"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="locked" column="locked" jdbcType="INTEGER"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="RoleMap">
        select id,
               role_char,
               role_name,
               locked,
               created_at,
               updated_at
        from role
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="RoleMap">
        select
        id, role_char, role_name, locked, created_at, updated_at
        from role
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="roleChar != null and roleChar != ''">
                and role_char = #{roleChar}
            </if>
            <if test="roleName != null and roleName != ''">
                and role_name = #{roleName}
            </if>
            <if test="locked != null">
                and locked = #{locked}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
            <if test="updatedAt != null">
                and updated_at = #{updatedAt}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from role
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="roleChar != null and roleChar != ''">
                and role_char = #{roleChar}
            </if>
            <if test="roleName != null and roleName != ''">
                and role_name = #{roleName}
            </if>
            <if test="locked != null">
                and locked = #{locked}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
            <if test="updatedAt != null">
                and updated_at = #{updatedAt}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into role(role_char, role_name, locked, created_at, updated_at)
        values (#{roleChar}, #{roleName}, #{locked}, #{createdAt}, #{updatedAt})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into role(role_char, role_name, locked, created_at, updated_at)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.roleChar}, #{entity.roleName}, #{entity.locked}, #{entity.createdAt}, #{entity.updatedAt})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into role(role_char, role_name, locked, created_at, updated_at)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.roleChar}, #{entity.roleName}, #{entity.locked}, #{entity.createdAt}, #{entity.updatedAt})
        </foreach>
        on duplicate key update
        role_char = values(role_char),
        role_name = values(role_name),
        locked = values(locked),
        created_at = values(created_at),
        updated_at = values(updated_at)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update role
        <set>
            <if test="roleChar != null and roleChar != ''">
                role_char = #{roleChar},
            </if>
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName},
            </if>
            <if test="locked != null">
                locked = #{locked},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from role
        where id = #{id}
    </delete>

</mapper>

